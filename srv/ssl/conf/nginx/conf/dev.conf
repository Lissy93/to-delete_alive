# 如果 websocket 连不上，可以在这里记录 body 查看请求响应的错误内容
# log_format  with_body
#   '$status "$request" $request_time $bytes_sent '
#   '$host $remote_addr $remote_user $time_iso8601 '
#   '$body_bytes_sent "$http_referer" '
#   '"$http_user_agent" "$http_x_forwarded_for" '
#   '$request_length $response_body';

upstream dev {
  include upstream/dev.conf;
}

# upstream dev-ws {
#   hash $hash_key consistent;
#   include upstream/dev.conf;
# }

server {
  listen  8801 ssl;
  ssl_certificate /ssl/127.0.0.1.pem;
  ssl_certificate_key /ssl/127.0.0.1-key.pem;
  location / {
    include header/proxy.conf;
    proxy_pass http://dev;
  }

# 如果 websocket 连不上，可以在这里记录 body 查看请求响应的错误内容
#   lua_need_request_body   on;
#   set $response_body      "";
# body_filter_by_lua      '
# local response_body = string.sub(ngx.arg[1],1,1000)
# ngx.ctx.buffered =  (ngx.ctx.buffered or "")..response_body
# if ngx.arg[2] then
# ngx.var.response_body = ngx.ctx.buffered
# end';
  # location ~ ^/ws/([\w-]+)/ {
  #   # access_log /var/log/nginx/ws.dev.dev.access.log with_body;
  #   access_log /var/log/nginx/ws.dev.dev.access.log global_main;
  #   set $hash_key $1;
  #   include header/ws.conf;
  #   proxy_pass http://dev-ws;
  #   error_log /var/log/nginx/ws.dev.dev.error.log error;
  # }
}

